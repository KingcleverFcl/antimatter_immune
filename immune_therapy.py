import os
import time
import json
import psutil
import psycopg2

DB_URL = os.getenv("DATABASE_PUBLIC_URL")

def connect_db():
    try:
        return psycopg2.connect(DB_URL)
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ë–î:\n{e}")
        return None

def get_signatures():
    conn = connect_db()
    if conn:
        try:
            with conn.cursor() as cur:
                cur.execute("SELECT signature FROM signatures;")
                results = cur.fetchall()
                return [row[0] for row in results]
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–∏–≥–Ω–∞—Ç—É—Ä –∏–∑ –ë–î:\n{e}")
        finally:
            conn.close()

    # fallback: local file
    if os.path.exists("signatures.json"):
        print("üìÅ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∏–≥–Ω–∞—Ç—É—Ä –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞...")
        with open("signatures.json", "r", encoding="utf-8") as f:
            return json.load(f)
    else:
        print("‚ùå –ù–µ—Ç —Å–∏–≥–Ω–∞—Ç—É—Ä. –ù–∏ –±–∞–∑–∞, –Ω–∏ —Ñ–∞–π–ª –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã.")
        return []

def simulate_scan(signatures):
    total = 40
    for i in range(total + 1):
        bar = "‚ñà" * i + "=" * (total - i)
        print(f"\r[{bar}]", end="", flush=True)
        time.sleep(0.05)
    print()

def scan_processes(signatures):
    print("üî¨ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...")
    simulate_scan(signatures)

    detected = []
    for proc in psutil.process_iter(['pid', 'name']):
        try:
            for sig in signatures:
                if sig.lower() in proc.info['name'].lower():
                    detected.append((proc.info['pid'], proc.info['name']))
        except Exception:
            pass

    return detected

def main_loop():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    print("üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ–ø–∏–∏...")
    print("üöÄ –ó–∞–ø—É—Å–∫ –∏–º–º—É–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...")
    print("üß¨ –ò–º–º—É–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞. –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –≥–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑...")

    signatures = get_signatures()

    if not signatures:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞—Ç—É—Ä—ã.")
    else:
        results = scan_processes(signatures)
        if results:
            print("‚ò£Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã:")
            for pid, name in results:
                print(f" - {name} (PID {pid})")
        else:
            print("‚úÖ –£–≥—Ä–æ–∑ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.")

    print("‚úÖ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –û–∂–∏–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —É–≥—Ä–æ–∑...")

if __name__ == "__main__":
    main_loop()
